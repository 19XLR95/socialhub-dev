# API information
swagger: '2.0'
info:
  title: SocialHub Public API
  description: SocialHub Public API Reference
  version: '1.0.0'
  contact:
    email: support@socialhub.io
host: app.socialhub.io
basePath: /api2/public/
externalDocs:
  description: SocialHub for Developers
  url: https://socialhubio.dev
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  token:
    type: apiKey
    description: Channel specific JWT Access Token (from the Custom Channel Settings)
    name: accesstoken
    in: query
security:
  - token: []

# API Operation Groups
tags:
  - name: ticket
    description: Ticket API

# API Routes and Operations
paths:

  '/inbox/tickets':
    post:
      summary: Creates a Ticket for Custom Channels
      description: Creates a Ticket of type TICKET for CUSTOM Channels.
      tags:
        - ticket
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              interaction:
                type: object
                properties:
                  message:
                    description: Ticket Interaction message.
                    type: string
                    maxLength: 10000
                  pictures:
                    description: List of pictures belonging to the Interaction.
                    type: array
                    items:
                      type: object
                      properties:
                        small:
                          type: string
                          format: url
                          pattern: '^https:'
                        large:
                          type: string
                          format: url
                          pattern: '^https:'
                  attachments:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          format: url
                        name:
                          type: string
                        size:
                          type: number
                        mimeType:
                          type: string
                  createdTime:
                    description: Timestamp of the Interactions creation on the network.
                    type: string
                    format: date-time
                  networkItemId:
                    description: Unique identifier of the Interaction on the network. Will error with 409 Conflict if there's already a Ticket with the same ID on the same custom channel.
                    type: string
                    pattern: '^[a-zA-Z0-9/_-]{6,256}$'
                  url:
                    description: A Link to the Interaction on the network.
                    type: string
                    format: url
      responses:
        201:
          description: Successfully created ticket.
          schema:
            $ref: '#/definitions/Ticket'
        400:
          $ref: '#/responses/BadRequestError'
        401:
          $ref: '#/responses/AccessTokenInvalidError'
        403:
          $ref: '#/responses/AccessDenied'
        409:
          $ref: '#/responses/ConflictError'
        500:
          $ref: '#/responses/InternalServerError'

# Reusable data type schema definitions.
definitions:

  ObjectId:
    description: Resource identifier string called `ObjectId`.
    type: string
    pattern: '^[a-f0-9]{24}$'

  Date:
    description: ISO 8601 date string
    type: string
    format: date-time

  Ticket:
    type: object
    description: SocialHub Inbox Ticket Object
    properties:
      _id:
        $ref: '#/definitions/ObjectId'
      accountId:
        $ref: '#/definitions/ObjectId'
      channelId:
        $ref: '#/definitions/ObjectId'
      createdTime:
        $ref: '#/definitions/Date'
      interaction:
        type: object
        properties:
          socialNetwork:
            type: string
            enum: ['CUSTOM']
          type:
            type: string
            enum: ['TICKET']
          networkItemId:
            type: string
          createdTime:
            $ref: '#/definitions/Date'
          url:
            type: string
            format: url
          message:
            type: string
          pictures:
            type: array
            items:
              type: object
              properties:
                small:
                  type: string
                  format: url
                large:
                  type: string
                  format: url
          attachments:
            type: array
            items:
              type: object
              properties:
                url:
                  type: string
                  format: url
                name:
                  type: string
                size:
                  type: number
                mimeType:
                  type: string

  Error:
    description: Standard API error object.
    type: object
    properties:
      code:
        type: string
        pattern: '^[a-zA-Z]*$'
      message:
        type: string

# Reusable API response definitions.
responses:
  BadRequestError: # 400
    description: The request was malformed and rejected.
    schema:
      $ref: '#/definitions/Error'
  AccessTokenInvalidError: # 401
    description: The specified access token is not or no longer valid.
    schema:
      $ref: '#/definitions/Error'
  AccessDenied: # 403
    description: The client does not have access to the requested resource.
    schema:
      $ref: '#/definitions/Error'
  InsufficientPermissions: # 403
    description: The client does not have the required permissions for the operation.
    schema:
      $ref: '#/definitions/Error'
  NotFoundError: # 404
    description: The requested resource could not be found.
    schema:
      $ref: '#/definitions/Error'
  NotAcceptableError: # 406
    description: The requested acceptable response cannot be provided.
    schema:
      $ref: '#/definitions/Error'
  ConflictError: # 409
    description: The request is not valid on this entity.
    schema:
      $ref: '#/definitions/Error'
  InternalServerError: # 500
    description: There was an unexpected error.
    schema:
      $ref: '#/definitions/Error'
